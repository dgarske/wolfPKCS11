# nginx TLS test configuration
# This configuration creates multiple server blocks with different TLS settings

worker_processes auto;
error_log /var/log/nginx/error.log debug;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '"$ssl_protocol" "$ssl_cipher" "$ssl_session_reused"';

    access_log /var/log/nginx/access.log main;
    sendfile on;
    keepalive_timeout 65;

    # TLS settings common to all servers
    ssl_dhparam /etc/nginx/certs/dhparam.pem;
    ssl_prefer_server_ciphers on;
    
    # TLS Session Resumption Settings
    ssl_session_timeout 1h;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets on;

    # Server 1: TLS 1.3 only
    server {
        listen 1443 ssl;
        server_name tls13.localhost;
        
        root /var/www/html/;
        index index.html;
        
        ssl_certificate /etc/nginx/certs/server-rsa.crt;
        ssl_certificate_key /etc/nginx/certs/server-rsa.key;
        
        ssl_protocols TLSv1.3;
        
        # TLS 1.3 ciphers
        ssl_conf_command Ciphersuites TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_AES_128_CCM_SHA256;
        
        # Replace variables in HTML
        sub_filter '%server_name%' '$server_name';
        sub_filter '%ssl_protocol%' '$ssl_protocol';
        sub_filter '%ssl_cipher%' '$ssl_cipher';
        sub_filter '%ssl_session_reused%' '$ssl_session_reused';
        sub_filter '%server_port%' '$server_port';
        sub_filter '%remote_addr%' '$remote_addr';
        sub_filter '%ssl_alpn_protocol%' '$ssl_alpn_protocol';
        sub_filter '%ssl_session_id%' '$ssl_session_id';
        sub_filter '%description%' 'TLS 1.3 Only';
    }

    # Server 2: TLS 1.2 only
    server {
        listen 2443 ssl;
        server_name tls12.localhost;
        
        root /var/www/html/;
        index index.html;
        
        ssl_certificate /etc/nginx/certs/server-rsa.crt;
        ssl_certificate_key /etc/nginx/certs/server-rsa.key;
        
        ssl_protocols TLSv1.2;
        
        # TLS 1.2 ciphers - strong ciphers only
        ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;
        
        # Replace variables in HTML
        sub_filter '%server_name%' '$server_name';
        sub_filter '%ssl_protocol%' '$ssl_protocol';
        sub_filter '%ssl_cipher%' '$ssl_cipher';
        sub_filter '%ssl_session_reused%' '$ssl_session_reused';
        sub_filter '%server_port%' '$server_port';
        sub_filter '%remote_addr%' '$remote_addr';
        sub_filter '%ssl_alpn_protocol%' '$ssl_alpn_protocol';
        sub_filter '%ssl_session_id%' '$ssl_session_id';
        sub_filter '%description%' 'TLS 1.2 Only - Strong Ciphers';
    }

    # Server 3: Both TLS 1.2 and TLS 1.3
    server {
        listen 3443 ssl;
        server_name both.localhost;
        
        root /var/www/html/;
        index index.html;
        
        ssl_certificate /etc/nginx/certs/server-rsa.crt;
        ssl_certificate_key /etc/nginx/certs/server-rsa.key;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        
        # Mixed TLS 1.2 and 1.3 ciphers
        ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
        ssl_conf_command Ciphersuites TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256;
        
        # Replace variables in HTML
        sub_filter '%server_name%' '$server_name';
        sub_filter '%ssl_protocol%' '$ssl_protocol';
        sub_filter '%ssl_cipher%' '$ssl_cipher';
        sub_filter '%ssl_session_reused%' '$ssl_session_reused';
        sub_filter '%server_port%' '$server_port';
        sub_filter '%remote_addr%' '$remote_addr';
        sub_filter '%ssl_alpn_protocol%' '$ssl_alpn_protocol';
        sub_filter '%ssl_session_id%' '$ssl_session_id';
        sub_filter '%description%' 'TLS 1.2 & 1.3';
    }

    # Server 4: Dual certificate setup (RSA + ECC)
    server {
        listen 4443 ssl;
        server_name dualcert.localhost;
        
        root /var/www/html/;
        index index.html;
        
        # RSA certificate
        ssl_certificate /etc/nginx/certs/server-rsa.crt;
        ssl_certificate_key /etc/nginx/certs/server-rsa.key;
        
        # ECC certificate
        ssl_certificate /etc/nginx/certs/server-ecc.crt;
        ssl_certificate_key /etc/nginx/certs/server-ecc.key;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        
        # Curves for ECC
        ssl_ecdh_curve prime256v1:secp384r1;
        
        # Replace variables in HTML
        sub_filter '%server_name%' '$server_name';
        sub_filter '%ssl_protocol%' '$ssl_protocol';
        sub_filter '%ssl_cipher%' '$ssl_cipher';
        sub_filter '%ssl_session_reused%' '$ssl_session_reused';
        sub_filter '%server_port%' '$server_port';
        sub_filter '%remote_addr%' '$remote_addr';
        sub_filter '%ssl_alpn_protocol%' '$ssl_alpn_protocol';
        sub_filter '%ssl_session_id%' '$ssl_session_id';
        sub_filter '%description%' 'Dual Certificate Setup (RSA + ECC)';
    }

    # Server 5: TLS 1.2 with all supported cipher suites for testing
    server {
        listen 5443 ssl;
        server_name allciphers.localhost;
        
        root /var/www/html/;
        index index.html;
        
        ssl_certificate /etc/nginx/certs/server-rsa.crt;
        ssl_certificate_key /etc/nginx/certs/server-rsa.key;
        
        ssl_protocols TLSv1.2;
        
        # All supported ciphers for testing compatibility
        ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-CCM:DHE-RSA-AES256-CCM:ECDHE-ECDSA-AES128-CCM:DHE-RSA-AES128-CCM:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-CCM:AES128-CCM:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA;
        
        # Replace variables in HTML
        sub_filter '%server_name%' '$server_name';
        sub_filter '%ssl_protocol%' '$ssl_protocol';
        sub_filter '%ssl_cipher%' '$ssl_cipher';
        sub_filter '%ssl_session_reused%' '$ssl_session_reused';
        sub_filter '%server_port%' '$server_port';
        sub_filter '%remote_addr%' '$remote_addr';
        sub_filter '%ssl_alpn_protocol%' '$ssl_alpn_protocol';
        sub_filter '%ssl_session_id%' '$ssl_session_id';
        sub_filter '%description%' 'TLS 1.2 with All Supported Ciphers';
    }

    # Server 6: TLS 1.3 only with ECC
    server {
        listen 6443 ssl;
        server_name tls13ecc.localhost;
        
        root /var/www/html/;
        index index.html;
        
        ssl_certificate /etc/nginx/certs/server-ecc.crt;
        ssl_certificate_key /etc/nginx/certs/server-ecc.key;
        
        ssl_protocols TLSv1.3;
        
        # TLS 1.3 ciphers
        ssl_conf_command Ciphersuites TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_AES_128_CCM_SHA256;
        
        # Replace variables in HTML
        sub_filter '%server_name%' '$server_name';
        sub_filter '%ssl_protocol%' '$ssl_protocol';
        sub_filter '%ssl_cipher%' '$ssl_cipher';
        sub_filter '%ssl_session_reused%' '$ssl_session_reused';
        sub_filter '%server_port%' '$server_port';
        sub_filter '%remote_addr%' '$remote_addr';
        sub_filter '%ssl_alpn_protocol%' '$ssl_alpn_protocol';
        sub_filter '%ssl_session_id%' '$ssl_session_id';
        sub_filter '%description%' 'TLS 1.3 Only';
    }

    # Server 7: TLS 1.2 only with ECC
    server {
        listen 7443 ssl;
        server_name tls12ecc.localhost;
        
        root /var/www/html/;
        index index.html;
        
        ssl_certificate /etc/nginx/certs/server-ecc.crt;
        ssl_certificate_key /etc/nginx/certs/server-ecc.key;
        
        ssl_protocols TLSv1.2;
        
        # TLS 1.2 ciphers - strong ciphers only
        ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;
        
        # Replace variables in HTML
        sub_filter '%server_name%' '$server_name';
        sub_filter '%ssl_protocol%' '$ssl_protocol';
        sub_filter '%ssl_cipher%' '$ssl_cipher';
        sub_filter '%ssl_session_reused%' '$ssl_session_reused';
        sub_filter '%server_port%' '$server_port';
        sub_filter '%remote_addr%' '$remote_addr';
        sub_filter '%ssl_alpn_protocol%' '$ssl_alpn_protocol';
        sub_filter '%ssl_session_id%' '$ssl_session_id';
        sub_filter '%description%' 'TLS 1.2 Only - Strong Ciphers';
    }
}
